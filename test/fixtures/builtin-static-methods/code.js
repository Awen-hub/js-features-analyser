Array.from;
Array.isArray;
Array.of;
Array.prototype;
Array[Symbol.species];
ArrayBuffer.isView;
ArrayBuffer.prototype;
ArrayBuffer[Symbol.species];
SharedArrayBuffer.prototype;
SharedArrayBuffer[Symbol.species];
DataView.prototype;
Atomics.add;
Atomics.and;
Atomics.compareExchange;
Atomics.exchange;
Atomics.isLockFree;
Atomics.load;
Atomics.or;
Atomics.store;
Atomics.sub;
Atomics.wait;
Atomics.notify;
Atomics.xor;
Atomics[Symbol.toStringTag];
Date.now;
Date.parse;
Date.prototype;
Date.UTC;
JSON.parse;
JSON.stringify;
JSON[Symbol.toStringTag];
Math.abs;
Math.acos;
Math.acosh;
Math.asin;
Math.asinh;
Math.atan;
Math.atanh;
Math.atan2;
Math.cbrt;
Math.ceil;
Math.clz32;
Math.cos;
Math.cosh;
Math.exp;
Math.expm1;
Math.floor;
Math.fround;
Math.hypot;
Math.imul;
Math.log;
Math.log1p;
Math.log10;
Math.log2;
Math.max;
Math.min;
Math.pow;
Math.random;
Math.round;
Math.sign;
Math.sin;
Math.sinh;
Math.sqrt;
Math.tan;
Math.tanh;
Math.trunc;
Math.E;
Math.LN10;
Math.LN2;
Math.LOG10E;
Math.LOG2E;
Math.PI;
Math.SQRT1_2;
Math.SQRT2;
Math[Symbol.toStringTag];
Map.prototype;
Map[Symbol.species];
Number.EPSILON;
Number.isFinite;
Number.isInteger;
Number.isNaN;
Number.isSafeInteger;
Number.MAX_SAFE_INTEGER;
Number.MAX_VALUE;
Number.MIN_SAFE_INTEGER;
Number.MIN_VALUE;
Number.NaN;
Number.NEGATIVE_INFINITY;
Number.parseFloat;
Number.parseInt;
Number.POSITIVE_INFINITY;
Number.prototype;
Object.assign;
Object.create;
Object.defineProperties;
Object.defineProperty;
Object.entries;
Object.freeze;
Object.fromEntries;
Object.getOwnPropertyDescriptor;
Object.getOwnPropertyDescriptors;
Object.getOwnPropertyNames;
Object.getOwnPropertySymbols;
Object.getPrototypeOf;
Object.is;
Object.isExtensible;
Object.isFrozen;
Object.isSealed;
Object.keys;
Object.preventExtensions;
Object.prototype;
Object.seal;
Object.setPrototypeOf;
Object.values;
Promise.all;
Promise.prototype;
Promise.race;
Promise.reject;
Promise.resolve;
Promise[Symbol.species];
Set.prototype;
Set[Symbol.species];
WeakMap.prototype;
WeakSet.prototype;
String.fromCharCode;
String.fromCodePoint;
String.prototype;
String.raw;
Symbol.asyncIterator;
Symbol.for;
Symbol.hasInstance;
Symbol.isConcatSpreadable;
Symbol.iterator;
Symbol.keyFor;
Symbol.match;
Symbol.matchAll;
Symbol.prototype;
Symbol.replace;
Symbol.search;
Symbol.species;
Symbol.split;
Symbol.toPrimitive;
Symbol.toStringTag;
Symbol.unscopables;
RegExp.prototype;
RegExp[Symbol.species];
Reflect.apply;
Reflect.construct;
Reflect.defineProperty;
Reflect.deleteProperty;
Reflect.get;
Reflect.getOwnPropertyDescriptor;
Reflect.getPrototypeOf;
Reflect.has;
Reflect.isExtensible;
Reflect.ownKeys;
Reflect.preventExtensions;
Reflect.set;
Reflect.setPrototypeOf;
Proxy.revocable;
Int8Array.from;
Int8Array.of;
Int8Array.prototype;
Int8Array[Symbol.species];
Int8Array.BYTES_PER_ELEMENT;
Uint8Array.from;
Uint8Array.of;
Uint8Array.prototype;
Uint8Array[Symbol.species];
Uint8Array.BYTES_PER_ELEMENT;
Uint8ClampedArray.from;
Uint8ClampedArray.of;
Uint8ClampedArray.prototype;
Uint8ClampedArray[Symbol.species];
Uint8ClampedArray.BYTES_PER_ELEMENT;
Int16Array.from;
Int16Array.of;
Int16Array.prototype;
Int16Array[Symbol.species];
Int16Array.BYTES_PER_ELEMENT;
Uint16Array.from;
Uint16Array.of;
Uint16Array.prototype;
Uint16Array[Symbol.species];
Uint16Array.BYTES_PER_ELEMENT;
Int32Array.from;
Int32Array.of;
Int32Array.prototype;
Int32Array[Symbol.species];
Int32Array.BYTES_PER_ELEMENT;
Uint32Array.from;
Uint32Array.of;
Uint32Array.prototype;
Uint32Array[Symbol.species];
Uint32Array.BYTES_PER_ELEMENT;
Float32Array.from;
Float32Array.of;
Float32Array.prototype;
Float32Array[Symbol.species];
Float32Array.BYTES_PER_ELEMENT;
Float64Array.from;
Float64Array.of;
Float64Array.prototype;
Float64Array[Symbol.species];
Float64Array.BYTES_PER_ELEMENT;
Function.length;
Function.prototype;